//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace com.taptap.tapsdk.bindings.csharp {

public class DeviceInfo : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  private bool swigCMemOwnBase;

  internal DeviceInfo(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwnBase = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(DeviceInfo obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~DeviceInfo() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwnBase) {
          swigCMemOwnBase = false;
          PlatformPINVOKE.delete_DeviceInfo(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public string device_version {
    set {
      PlatformPINVOKE.DeviceInfo_device_version_set(swigCPtr, value);
      if (PlatformPINVOKE.SWIGPendingException.Pending) throw PlatformPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = PlatformPINVOKE.DeviceInfo_device_version_get(swigCPtr);
      if (PlatformPINVOKE.SWIGPendingException.Pending) throw PlatformPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string model {
    set {
      PlatformPINVOKE.DeviceInfo_model_set(swigCPtr, value);
      if (PlatformPINVOKE.SWIGPendingException.Pending) throw PlatformPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = PlatformPINVOKE.DeviceInfo_model_get(swigCPtr);
      if (PlatformPINVOKE.SWIGPendingException.Pending) throw PlatformPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string platform {
    set {
      PlatformPINVOKE.DeviceInfo_platform_set(swigCPtr, value);
      if (PlatformPINVOKE.SWIGPendingException.Pending) throw PlatformPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = PlatformPINVOKE.DeviceInfo_platform_get(swigCPtr);
      if (PlatformPINVOKE.SWIGPendingException.Pending) throw PlatformPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string engine {
    set {
      PlatformPINVOKE.DeviceInfo_engine_set(swigCPtr, value);
      if (PlatformPINVOKE.SWIGPendingException.Pending) throw PlatformPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = PlatformPINVOKE.DeviceInfo_engine_get(swigCPtr);
      if (PlatformPINVOKE.SWIGPendingException.Pending) throw PlatformPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string os_version {
    set {
      PlatformPINVOKE.DeviceInfo_os_version_set(swigCPtr, value);
      if (PlatformPINVOKE.SWIGPendingException.Pending) throw PlatformPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = PlatformPINVOKE.DeviceInfo_os_version_get(swigCPtr);
      if (PlatformPINVOKE.SWIGPendingException.Pending) throw PlatformPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string android_id {
    set {
      PlatformPINVOKE.DeviceInfo_android_id_set(swigCPtr, value);
      if (PlatformPINVOKE.SWIGPendingException.Pending) throw PlatformPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = PlatformPINVOKE.DeviceInfo_android_id_get(swigCPtr);
      if (PlatformPINVOKE.SWIGPendingException.Pending) throw PlatformPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string app_version {
    set {
      PlatformPINVOKE.DeviceInfo_app_version_set(swigCPtr, value);
      if (PlatformPINVOKE.SWIGPendingException.Pending) throw PlatformPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = PlatformPINVOKE.DeviceInfo_app_version_get(swigCPtr);
      if (PlatformPINVOKE.SWIGPendingException.Pending) throw PlatformPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string app_package_name {
    set {
      PlatformPINVOKE.DeviceInfo_app_package_name_set(swigCPtr, value);
      if (PlatformPINVOKE.SWIGPendingException.Pending) throw PlatformPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = PlatformPINVOKE.DeviceInfo_app_package_name_get(swigCPtr);
      if (PlatformPINVOKE.SWIGPendingException.Pending) throw PlatformPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string ram_size {
    set {
      PlatformPINVOKE.DeviceInfo_ram_size_set(swigCPtr, value);
      if (PlatformPINVOKE.SWIGPendingException.Pending) throw PlatformPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = PlatformPINVOKE.DeviceInfo_ram_size_get(swigCPtr);
      if (PlatformPINVOKE.SWIGPendingException.Pending) throw PlatformPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string rom_size {
    set {
      PlatformPINVOKE.DeviceInfo_rom_size_set(swigCPtr, value);
      if (PlatformPINVOKE.SWIGPendingException.Pending) throw PlatformPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = PlatformPINVOKE.DeviceInfo_rom_size_get(swigCPtr);
      if (PlatformPINVOKE.SWIGPendingException.Pending) throw PlatformPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string network_type {
    set {
      PlatformPINVOKE.DeviceInfo_network_type_set(swigCPtr, value);
      if (PlatformPINVOKE.SWIGPendingException.Pending) throw PlatformPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = PlatformPINVOKE.DeviceInfo_network_type_get(swigCPtr);
      if (PlatformPINVOKE.SWIGPendingException.Pending) throw PlatformPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string mobile_type {
    set {
      PlatformPINVOKE.DeviceInfo_mobile_type_set(swigCPtr, value);
      if (PlatformPINVOKE.SWIGPendingException.Pending) throw PlatformPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = PlatformPINVOKE.DeviceInfo_mobile_type_get(swigCPtr);
      if (PlatformPINVOKE.SWIGPendingException.Pending) throw PlatformPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string cpu_info {
    set {
      PlatformPINVOKE.DeviceInfo_cpu_info_set(swigCPtr, value);
      if (PlatformPINVOKE.SWIGPendingException.Pending) throw PlatformPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = PlatformPINVOKE.DeviceInfo_cpu_info_get(swigCPtr);
      if (PlatformPINVOKE.SWIGPendingException.Pending) throw PlatformPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public DeviceInfo() : this(PlatformPINVOKE.new_DeviceInfo(), true) {
  }

}

}
